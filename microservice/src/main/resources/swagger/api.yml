# API-first development with OpenAPI
# This file will be used at compile time to generate Spring-MVC endpoint stubs using openapi-generator
openapi: '3.0.1'
info:
  title: 'microservice'
  version: 0.0.1
servers:
  - url: http://localhost:8081/api
    description: Development server
  - url: https://localhost:8081/api
    description: Development server with TLS Profile
paths:
  /client:
    post:
      summary: Add a new Client
      description: Registers a new Client in the system
      operationId: postClient
      requestBody:
        description: The Client to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientDTO'
      responses:
        '200':
          description: Client added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDTO'
        '403':
          description: Unauthorized
          content: { }
  /client/{id}:
    delete:
      summary: Delete an existing client
      description: Removes an existing Client from the system or does nothing if it doesn't exist
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          description: The unique identifier of the Client to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Nothing is returned whether a Client was deleted or not
          content: { }
        '404':
          description: No id provided
          content: { }
        '403':
          description: Unauthorized
          content: { }
  /client/{nif}:
    get:
      summary: Get the Client with the given NIF
      description: Finds which client has the provided NIF, if any
      operationId: getClientByNIF
      parameters:
        - name: nif
          in: path
          description: The NIF of the Client to search for
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Client found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientDTO'
        '404':
          description: Client not found
          content: { }
        '403':
          description: Unauthorized
          content: { }
components:
  schemas:
    ClientDTO:
      type: object
      properties:
        name:
          type: string
          # https://github.com/OpenAPITools/openapi-generator/issues/19953#issuecomment-2592685406
          x-field-extra-annotation: >-
            @NotEmpty
        nif:
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        address:
          $ref: '#/definitions/AddressDTO'
        phone_number:
          description: The number that, within the country with the provided countryCode, belongs solely to the client
          type: number
        phone_country_code:
          description: The code which uniquely identifies the country of this phone number
          type: number
      required:
        - name
        - nif
        - address
        - phone_number
        - phone_country_code
      additionalProperties: false
    AddressDTO:
      description: The textual identifier of the location where the client resides at
      type: object
      properties:
        city:
          description: City
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        country:
          description: Country
          type: number
        postcode:
          description: Postcode
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        stateOrProvince:
          description: State or province
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        streetOne:
          description: Describes the street
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        streetTwo:
          description: Complementary street description
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
        emailAddress:
          description: Full email address in standard format
          type: string
          x-field-extra-annotation: >-
            @NotEmpty
            @Email
      required:
        - city
        - country
        - postcode
        - stateOrProvince
        - streetOne
        - streetTwo
        - emailAddress
      additionalProperties: false
  #    PhoneNumberDTO:
  #      description: The phone number with country code attributed to this client and this client alone
  #      type: object
  #      properties:
  #        countryCode:
  #          description: The code which uniquely identifies the country of this phone number
  #          type: number
  #        number:
  #          description: The number that, within the country with the provided countryCode, belongs solely to the client
  #          type: number
  #      required:
  #        - countryCode
  #        - number
  #      additionalProperties: false
  responses:
    Problem:
      description: error occurred - see status code and problem object for more information.
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              type:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the problem type.  When dereferenced,
                  it SHOULD provide human-readable documentation for the problem type
                  (e.g., using HTML).
                default: 'about:blank'
                example: 'https://www.jhipster.tech/problem/problem-with-message'
              title:
                type: string
                description: |
                  A short, summary of the problem type. Written in english and readable
                  for engineers (usually not suited for non technical stakeholders and
                  not localized); example: Service Unavailable
              status:
                type: integer
                format: int32
                description: |
                  The HTTP status code generated by the origin server for this occurrence
                  of the problem.
                minimum: 100
                maximum: 600
                exclusiveMaximum: true
                example: 503
              detail:
                type: string
                description: |
                  A human readable explanation specific to this occurrence of the
                  problem.
                example: Connection to database timed out
              instance:
                type: string
                format: uri
                description: |
                  An absolute URI that identifies the specific occurrence of the problem.
                  It may or may not yield further information if dereferenced.

  securitySchemes:
    jwt:
      type: http
      description: JWT Authentication
      scheme: bearer
      bearerFormat: JWT
#    basic:
#      type: http
#      description: Basic Authentication
#      scheme: basic
security:
  - jwt: [ ]
#  - basic: []
